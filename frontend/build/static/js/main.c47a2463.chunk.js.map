{"version":3,"sources":["constants/productConstants.js","constants/cardConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","href","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c47a2463.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","// Note: Stores are object\n// Stores are mega state that is accessed and updated by itsown functions\n// This is where we connect all our reducers and middlware\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers.js'\nimport { cardReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cardReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\n// Fetch items from localStore if ANY\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\n// Fethc user info from localStorage if ANY\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\n// Fethc shipping info from localStorage if ANY\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\n// Fetch payment Method ...New\n// const paymentMethodFromStorage = localStorage.getItem('paymentMethod')\n//   ? JSON.parse(localStorage.getItem('paymentMethod'))\n//   : {}\n\n// This is where we get our cartItes, tokens, userInfo\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk] // What does this do again ?\n\n// Create store\n// CreateStore: a Function what uses rootReducer to create store\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)) // What is compose with dev tools ?\n)\n\nexport default store\n","// Note: Reducers are functions which take in initial state and an action\n// Returns that specific part of the global store\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants.js'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true, ...state }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cardConstants'\n\nexport const cardReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state, // Returns whatever our state is\n          cartItems: [...state.cartItems, item], // adds item to the cart\n        }\n      }\n    case CART_REMOVE_ITEM:\n      // Filter out the item to be removed\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\n// Note: You will need the USER_LOGOUT !!!!\n// If you remove this, if the user logs out and tries to re-register, it will redirect to home page instead of Registation page\n// Why ? Because the Redux still has userInfoState in userRegister Object while in\n// userLogin its userInflo returns empty object\n//\nexport const userRegisterReducer = (state = {}, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  // remember actions are objects which contain type and payload\n  // Send appropriate response depending on the action\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\n// Reducer for Creating Orders\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Reducer for fetching order details\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Reducer for fetching payment details\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\n// Reducer for updating delievered after payment\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\n// Reducer for fetching logged in users orders ONLY\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\n// Reducer for getting list of orders\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nexport const SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/') // Go homepage if search is empty\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Search Products ...'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    // When sending data, we want to send header of content type to JSON\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    // Send POST request of user by username/password\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    // Set data to localstorage\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  // removes userinfo from storage\n  localStorage.removeItem('userInfo')\n\n  dispatch({ type: USER_LOGOUT }) // Log user out and send to state\n  dispatch({ type: USER_DETAILS_RESET }) // Clears user details in state\n  dispatch({ type: ORDER_LIST_MY_RESET }) // Clears user orders in state\n  dispatch({ type: USER_LIST_RESET }) // Clears the user list i\n}\n\n// Registers user\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    // When sending data, we want to send header of content type to JSON\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    // Send POST request of user by name/username/password\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: USER_REGISTER_SUCCESS, // Successfully registers user\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS, // Successfully logs in user\n      payload: data,\n    })\n\n    // Set data to localstorage\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Fetch user info\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send GET request of user by name/username/password\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: USER_DETAILS_SUCCESS, // Successfully registers user\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Updates the users profile\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send GET request of user by name/username/password\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS, // Successfully registers user\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Fetch the list of Users for Admin\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send GET request of user by name/username/password\n    const { data } = await axios.get(`/api/users`, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: USER_LIST_SUCCESS, // Successfully registers user\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Delete User .. Admin only\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send DELETE request of user by name/username/password\n    await axios.delete(`/api/users/${id}`, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: USER_DELETE_SUCCESS, // Successfully registers user\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Update User .. Admin only\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send DELETE request of user by name/username/password\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: USER_UPDATE_SUCCESS, // Successfully Updates user\n    })\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  // Fetch UserInfo to check if user sign in.\n  // If used, in login will be \"Username\" instead of 'Sign In'\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand href='/'>eCommerceApp</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to='/admin/productList'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to='/admin/orderList'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap' // We import Containers from react-bootstrap\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; eCommerApp</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n\n      <span>{text ? text : ''}</span>\n    </div>\n  )\n}\n\n// Note: This is default properties\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\n// This will type check your properties\nRating.propTypes = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","// This is the Loader spinner\n\nimport React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading ...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","// Note: Actions are objects containing a type and payload\n// Used to tell reducer how to update the store\nimport axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST }) // Sending request`\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    // At this point, we have the product data from the backend\n    dispatch({\n      // Fetching the data was successful\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST }) // Sending request`\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    // At this point, we have the product data from the backend\n    dispatch({\n      // Fetching the data was successful\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Delete Product by Admin\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send DELETE request for product\n    await axios.delete(`/api/products/${id}`, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Create Product by Admin\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send Post request for product\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Update Product by Admin\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send Post request for product\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Update Product by Admin\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send Post request for product\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Fetches the Top Products\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST }) // Sending request`\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    // At this point, we have the product data from the backend\n    dispatch({\n      // Fetching the data was successful\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\nimport { productTopRatedReducer } from '../reducers/productReducers'\n\nconst ProductCarousel = () => {\n  // Initialize dispatch\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Welcome to ProShop',\n  description: 'We sell cheap electronics',\n  keywords: 'electronics, buy electronics',\n}\n\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n  // Check for keyword for search\n  const keyword = match.params.keyword\n\n  // Pagination Functionality\n  const pageNumber = match.params.pageNumber || 1\n\n  // New Methd\n  const dispatch = useDispatch()\n  const productList = useSelector((state) => state.productList) // Displays the products from the store\n  const { loading, error, products, page, pages } = productList // pull loading, error and products from state\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0) // Add for Reviews\n  const [comment, setComment] = useState('') // Add for Reviews\n\n  const dispatch = useDispatch()\n\n  // Bring in Product details from state\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  // Bring in UserInfo from state\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  // Bring in Product review from state\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  // Note: This is the component which creates actionCreator > action > Reducer > Store\n  // This is what modifies the state\n  useEffect(() => {\n    if (successProductReview) {\n      alert('Review Submitted!')\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n\n    dispatch(listProductDetails(match.params.id))\n  }, [dispatch, match, successProductReview])\n\n  // When user  Clicks on the Add to cart Button\n  // Routes to a new page with URL like this\n  // http://localhost:3000/cart/5fd17575665ddc40c43ee5c8?qty=2\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault() // We need to include this since we are submitting a form\n    dispatch(createProductReview(match.params.id, { rating, comment }))\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews}`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select ...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type='submit' variant='primary'>\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to Write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport { disable } from 'colors'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cardConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  // Need to save entire CART to local storage\n  // Note: Need to save it in JSON since we can only store in text\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n// Shipping Info\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\n// Payment Method\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1 // location qty comes in the form of ?qty=1 ...We only want the 1 and not '?qty' productActions\n\n  const dispatch = useDispatch()\n\n  // Feth the current Items in store via state\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n  console.log(cartItems) // Fetch Items in the cart\n\n  // Note: This is the component which creates actionCreator > action > Reducer > Store\n  // This is what modifies the state\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  // Modifies the Store by removing the item\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  // Redirects user\n  // If not logged in, will go to log in. If logged in, will go to shipping\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty... <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed to checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n// This form contains all the children\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin // These values you get from the reducer\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  // Redirect only if user loggedIn\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  // Calls the login Action which goes to Reducer\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    // Dispatch Login\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer ?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('') // setName will fill name\n  const [email, setEmail] = useState('') // setEmail will fill email\n  const [password, setPassword] = useState('') // setPassword will fill password\n  const [confirmPassword, setConfirmPassword] = useState('') // setConfirmPassword will fill confirmPassword\n  const [message, setMessage] = useState(null) // setMessage will fill message\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister // These values you get from the reducer\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  // Calls the Register Action which goes to Reducer\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    // Verify password First before registering\n    if (password !== confirmPassword) {\n      setMessage('Password do not match')\n    } else {\n      // Dispatch Register\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('') // setName will fill name\n  const [email, setEmail] = useState('') // setEmail will fill email\n  const [password, setPassword] = useState('') // setPassword will fill password\n  const [confirmPassword, setConfirmPassword] = useState('') // setConfirmPassword will fill confirmPassword\n  const [message, setMessage] = useState(null) // setMessage will fill message\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails // These values you get from the reducer\n\n  // Check if user logged in.\n  // If not, user should not be able to access this screen\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin // These values you get from the reducer\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile // These values you get from the reducer\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/')\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user]) // if you remove user in the list of dependencies it doesent show up\n\n  // Calls the Register Action which goes to Reducer\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    // Verify password First before registering\n    if (password !== confirmPassword) {\n      setMessage('Password do not match')\n    } else {\n      // Dispatch Update profile\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants'\n\n// Creates an Order Action\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send POST request of user by name/username/password\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: ORDER_CREATE_SUCCESS, // Successfully creates Order\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Fetchs an Order Id\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send GET request of user by name/username/password\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS, // Successfully creates Order\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Pays order\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send GET request of user by name/username/password\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: ORDER_PAY_SUCCESS, // Successfully creates Order\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Deliver order\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send GET request of user by name/username/password\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS, // Successfully creates Order\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Fetch current users Paid orders\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send GET request of user by name/username/password\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// Fetch list of orders\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    // Destructure twice to get the userInfo\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    // Pass token here\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // Send GET request of user by name/username/password\n    const { data } = await axios.get(`/api/orders/`, config)\n\n    // Dispatch and send to Reducer\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    // If fetching data was not succesful\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  // Fetches the shipping address from local storage if any\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  // Create dispatch\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault() // Need to call this since its a form\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n\n    // After disaptching we move to the next page\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter Address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter City'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='postalCode'\n            placeholder='Enter Postal Code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter Country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  // Fetches the shipping address from local storage if any\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  // We redirect if no shipping address provided\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal') // Default is Paypal\n\n  // Create dispatch\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault() // Need to call this since its a form\n    dispatch(savePaymentMethod(paymentMethod))\n\n    // After disaptching we move to the next page ...which is the place order screen\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n\n          <Col>\n            <Form.Check\n              type='radio'\n              label='Paypal or CreditCard'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n\n          <Col>\n            <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderScreen = ({ history }) => {\n  // Create dispatch\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  // Creates the order\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  // Redirect user after successful\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`) // Goes into order page, if order was successfully created\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  // Places the order\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.shippingPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/CheckoutSteps'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  // Creaete state for sdk\n  const [sdkReady, setSdkReady] = useState(false)\n\n  // Create dispatch\n  const dispatch = useDispatch()\n\n  // Creates the order\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  // fetch the orderPay from state\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  // fetch the delivery from state\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  // fetch the userLogin info from state\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    // Setup Paypal script first before using it\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      // add state when sdk is ready\n      script.onload = () => {\n        setSdkReady(true) // This tells us script has been loaded\n      }\n\n      // add script to body\n      document.body.appendChild(script)\n    }\n\n    if (!order || order._id !== orderId || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      // Check if order is NOT paid\n      if (!window.paypal) {\n        // Check if paypal script is present\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, order, successDeliver, userInfo, history])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult) // paymentResult comes from Paypal\n    dispatch(payOrder(orderId, paymentResult)) // Call payorder action\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order #: {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}> {order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered </Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark as Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList) // Fetch userList from state\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin) // Fetch userLogin from state\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete) // Fetch userLogin from state\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      // Not logged in or Not admin then redirect to login page\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  // Dispatch the Action\n  const deleteHandler = (id) => {\n    console.log('Delete')\n    if (window.confirm('Are you sure ?')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n  const [name, setName] = useState('') // setName will fill name\n  const [email, setEmail] = useState('') // setEmail will fill email\n  const [isAdmin, setIsAdmin] = useState(false) // setIsAdmin will fill isAdmin\n\n  // Create dispatch\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails // These values you get from the reducer\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate // These values you get from the reducer\n\n  useEffect(() => {\n    // Check for the success of the update since we want to redirect to the user list once updated\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      // If doesent exist or doesent match URL, dispatch\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  // Calls the Register Action which goes to Reducer\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='isAdmin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1 // Paginaiton FUnctionality\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList) // Fetch userList from state\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete) // Delete product from state\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate) // Delete product from state\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin) // Fetch userLogin from state\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET }) // Dispatch the reset\n\n    if (!userInfo.isAdmin) {\n      // Not logged in or Not admin then redirect to login page\n      history.push('/login')\n    }\n\n    // Redirect to the product screen if successfully created\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber)) // We set keyword to '' since we dont care about that in the admin screen\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  // Dispatch the Action\n  const deleteHandler = (id) => {\n    console.log('Delete')\n    if (window.confirm('Are you sure ?')) {\n      // DELETE PRODUCT\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    console.log('Creating Product')\n    // Create PRODUCT\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus' /> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('') // setName will fill name\n  const [price, setPrice] = useState(0) // setPrice will fill price\n  const [image, setImage] = useState('') // setImage will fill image\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  // Create dispatch\n  const dispatch = useDispatch()\n\n  // Grab from the state the product details\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails // These values you get from the reducer\n\n  // Grab from the state the productUpdate\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate // These values you get from the reducer\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  // Handles the image upload\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      // When uploading image, you will need to add content type\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.log(error)\n      setUploading(false)\n    }\n  }\n\n  // Calls the Register Action which goes to Reducer\n  const submitHandler = (e) => {\n    console.log('Update Product')\n    e.preventDefault()\n\n    // UPDATE PRODUCT\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter Price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Image URL'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter CountInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList) // Fetch userList from state\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin) // Fetch userLogin from state\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      // Not logged in or Not admin then redirect to login page\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap' // We import Containers from react-bootstrap\nimport Header from './components/Header' // If Header does not contain \"default\" in export, then you need to do {}\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store.js'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}